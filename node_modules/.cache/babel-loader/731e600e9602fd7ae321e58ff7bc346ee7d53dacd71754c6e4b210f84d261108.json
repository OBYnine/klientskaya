{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0f2c7fd2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"task-list\"\n};\nconst _hoisted_2 = [\"onUpdate:modelValue\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", null, _toDisplayString($props.title), 1 /* TEXT */), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.tasks, (task, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": $event => task.completed = $event\n    }, null, 8 /* PROPS */, _hoisted_2), [[_vModelCheckbox, task.completed]]), _createElementVNode(\"span\", {\n      class: _normalizeClass({\n        completed: task.completed\n      })\n    }, _toDisplayString(task.description), 3 /* TEXT, CLASS */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$props","title","_Fragment","_renderList","tasks","task","index","key","type","completed","$event","_normalizeClass","description"],"sources":["C:\\kirill_avtomat\\src\\components\\v-user.vue"],"sourcesContent":["<template>\r\n  <div class=\"task-list\">\r\n    <h2>{{ title }}</h2>\r\n    <ul>\r\n      <li v-for=\"(task, index) in tasks\" :key=\"index\">\r\n        <input type=\"checkbox\" v-model=\"task.completed\">\r\n        <span :class=\"{ completed: task.completed }\">{{ task.description }}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'TaskList',\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      default: 'Task List'\r\n    },\r\n    tasks: {\r\n      type: Array,\r\n      default: () => []\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.task-list {\r\n  margin-bottom: 20px;\r\n}\r\n.task-list h2 {\r\n  font-size: 1.2rem;\r\n  margin-bottom: 10px;\r\n}\r\n.task-list ul {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n.task-list li {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 5px;\r\n}\r\n.task-list li .completed {\r\n  text-decoration: line-through;\r\n  color: #999;\r\n}\r\n.task-list li input[type=\"checkbox\"] {\r\n  margin-right: 10px;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAW;;;uBAAtBC,mBAAA,CAQM,OARNC,UAQM,GAPJC,mBAAA,CAAoB,YAAAC,gBAAA,CAAbC,MAAA,CAAAC,KAAK,kBACZH,mBAAA,CAKK,c,kBAJHF,mBAAA,CAGKM,SAAA,QAAAC,WAAA,CAHuBH,MAAA,CAAAI,KAAK,GAArBC,IAAI,EAAEC,KAAK;yBAAvBV,mBAAA,CAGK;MAH+BW,GAAG,EAAED;IAAK,I,gBAC5CR,mBAAA,CAAgD;MAAzCU,IAAI,EAAC,UAAU;uCAAUH,IAAI,CAACI,SAAS,GAAAC;4DAAdL,IAAI,CAACI,SAAS,E,GAC9CX,mBAAA,CAA0E;MAAnEH,KAAK,EAAAgB,eAAA;QAAAF,SAAA,EAAeJ,IAAI,CAACI;MAAS;wBAAOJ,IAAI,CAACO,WAAW,wB"},"metadata":{},"sourceType":"module","externalDependencies":[]}